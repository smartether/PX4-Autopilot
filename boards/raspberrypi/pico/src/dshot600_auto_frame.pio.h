// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------------- //
// dshot600_auto_frame //
// ------------------- //

#define dshot600_auto_frame_wrap_target 0
#define dshot600_auto_frame_wrap 25

#define dshot600_auto_frame_ON 1
#define dshot600_auto_frame_OFF 0

static const uint16_t dshot600_auto_frame_program_instructions[] = {
            //     .wrap_target
    0xe000, //  0: set    pins, 0                    
    0x6050, //  1: out    y, 16                      
    0x0082, //  2: jmp    y--, 2                     
    0xe02f, //  3: set    x, 15                      
    0xe001, //  4: set    pins, 1                    
    0x6041, //  5: out    y, 1                       
    0x0091, //  6: jmp    y--, 17                    
    0xbf42, //  7: nop                           [31]
    0xbf42, //  8: nop                           [31]
    0xaa42, //  9: nop                           [10]
    0xe000, // 10: set    pins, 0                    
    0xbf42, // 11: nop                           [31]
    0xbf42, // 12: nop                           [31]
    0xbf42, // 13: nop                           [31]
    0xbf42, // 14: nop                           [31]
    0x0144, // 15: jmp    x--, 4                 [1] 
    0x0000, // 16: jmp    0                          
    0xbf42, // 17: nop                           [31]
    0xbf42, // 18: nop                           [31]
    0xbf42, // 19: nop                           [31]
    0xbf42, // 20: nop                           [31]
    0xb942, // 21: nop                           [25]
    0xe000, // 22: set    pins, 0                    
    0xbf42, // 23: nop                           [31]
    0xb242, // 24: nop                           [18]
    0x0044, // 25: jmp    x--, 4                     
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot600_auto_frame_program = {
    .instructions = dshot600_auto_frame_program_instructions,
    .length = 26,
    .origin = -1,
};

static inline pio_sm_config dshot600_auto_frame_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot600_auto_frame_wrap_target, offset + dshot600_auto_frame_wrap);
    return c;
}

#include "hardware/pio.h"
#include "hardware/dma.h"
#include "hardware/pwm.h"
#include "hardware/clocks.h"
#define get_default_config(offset) dshot600_auto_frame_program_get_default_config(offset);
static inline void dshot_program_init(PIO pio, uint sm, uint offset, uint pin, uint channel, void* data, float freq) {
    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
    pio_sm_config c = get_default_config(offset);
    sm_config_set_out_pins(&c, pin, 1);
//    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_set_pins(&c, pin, 1);
    sm_config_set_out_shift(&c, false, true, 32);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    sm_config_set_clkdiv(&c, 1.0f);
    //sm_config_set_clkdiv_int_frac(&c, 1, 0);
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}

#endif

